@model BegginerLevelTask.Context.ReviewAssignment
@{
    ViewBag.Title = "ReviewAssignment";
}

<style>
    .form-horizontal {
        background-color: #fffdd0;
        border: 2px solid darkblue;
        -moz-border-radius: 15px;
        border-radius: 15px;
        -webkit-border-radius: 15px;
        padding-bottom: 5px;
    }

    button {
        margin-bottom: 15px;
    }

    .form-group {
        padding-left: 445px;
        text-align: left;
    }
</style>

<h2 class="text-center text-uppercase"><strong><u>Assign Review</u></strong></h2>

<hr class="line" />

@using (Html.BeginForm("ReviewAssignment", "ReviewAssignment", "", FormMethod.Post))   //Razor Syntax
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="column">
            <div class="text-center"><h4 style="color: black;"><strong><u>Agenda : @ViewBag.Agenda</u></strong></h4></div>
            <br />
            <div class="form-group">
                <label class="control-label">Employee Name</label>
                @Html.HiddenFor(x => x.ReviewID)
                @Html.HiddenFor(x => x.UserID)
                @Html.HiddenFor(x => x.ReviewAssignmentID)
                @Html.DropDownListFor(x => x.EmployeeID, new SelectList(ViewBag.EmployeeList, "EmployeeID", "FirstName"), new { style = "width: 279px; height:75px; color:grey", multiple = "multiple", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EmployeeID, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label class="control-label">Reviewer Name</label>
                @Html.DropDownListFor(x => x.Reviewer, new SelectList(ViewBag.EmployeeList, "EmployeeId", "FirstName"), new { style = "width: 279px", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Reviewer, "", new { @class = "error" })
            </div>
        </div>
        <div class="form-group" id="buttons" style="margin-bottom:5px">
            <div class="col-lg-10">
                <button type="reset" class="btn btn-primary">RESET</button>
                <button onclick="SubmissionSuccessful()" type="submit" class="btn btn-primary">SUBMIT</button>
                <a href="@Url.Action("ReviewAssignmentList","ReviewAssignment", new { @class = "create" })" class="btn btn-primary">Assigned List</a>
            </div>
        </div>
    </div>
}

<script>
    function SubmissionSuccessful() {
        alert("Review successfully assigned !");
    }
</script>

