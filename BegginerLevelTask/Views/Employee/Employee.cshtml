@model BegginerLevelTask.Context.Employee
@{
    ViewBag.Title = "Employee";
}

<style>
    .error {
        color: red;
    }

    .form-horizontal {
        background-color: #fffdd0;
        border: 2px solid darkblue;
        -moz-border-radius: 15px;
        border-radius: 15px;
        -webkit-border-radius: 15px;
        padding-bottom: 5px;
    }

    button {
        margin-bottom: 15px;
    }

    .form-group {
        padding-left: 160px;
        text-align: left;
    }
</style>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<h2 class="text-center text-uppercase"><strong><u>Employee</u></strong></h2>
<hr class="line" />
@using (Html.BeginForm("AddEmployee", "Employee", "", FormMethod.Post))   //Razor Syntax
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="container1" style="float:left; margin:15px;width:500px">
            <div class="form-group">
                <label class="control-label">First Name</label>
                @Html.HiddenFor(x => x.EmployeeID)
                @Html.HiddenFor(x => x.UserID)
                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label class="control-label">Last Name</label>
                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label class="control-label">DOB</label>
                @Html.TextBoxFor(x => x.DOB, "{0:dd MMM yyyy }", new
                {@*htmlAttributes = new {
                        @readonly = "true", value = Model.DOB.HasValue ? Model.DOB.Value.ToString("MM/dd/yyyy") : "--/--/----",*@@class = "form-control datepicker"
/*}*/
})
                @Html.ValidationMessageFor(x => x.DOB, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label class="control-label">Gender</label>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.Gender, "Male", new { @checked = true })
                        Male
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.Gender, "Female")
                        Female
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label">Designation</label>
                @Html.TextBoxFor(x => x.DesignationEmp, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.DesignationEmp, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label class="control-label">DOJ</label>
                @Html.TextBoxFor(x => x.DOJ, "{0:dd MMM yyyy }", new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(x => x.DOJ, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label class="control-label">Department</label>
                @Html.TextBoxFor(x => x.DepartmentEmp, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.DepartmentEmp, "", new { @class = "error" })
            </div>
        </div>
        <div class="container2" style="float:left; margin:15px;width:500px">
            <div class="form-group">
                <label class="control-label">Address</label>
                @Html.TextBoxFor(x => x.AddressEmp, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.AddressEmp, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label class="control-label">Employee type</label>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.EmployeeType, "Full-Time", new { @checked = true })
                        Full-Time
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.EmployeeType, "Contract")
                        Contract
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label">Phone Number</label>
                @Html.TextBoxFor(x => x.PhoneNumEmp, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.PhoneNumEmp, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label class="control-label">Email</label>
                @Html.TextBoxFor(x => x.EmailEmp, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.EmailEmp, "", new { @class = "error" })
            </div>

            <div class="form-group">
                <label class=" control-label">Status</label>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.Status, "Active", new { @checked = true })
                        Active
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.Status, "In Active")
                        In-Active
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label">User Name</label>
                @Html.TextBoxFor(x => x.UserNameEmp, new { @id = "Username", @class = "form-control" })
                @Html.ValidationMessageFor(x => x.UserNameEmp, "", new { @class = "error" })
            </div>
            <div class="form-group">
                <label class="control-label">Password</label>
                @Html.PasswordFor(x => x.PasswordEmp, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.PasswordEmp, "", new { @class = "error" })
            </div>
        </div>
        <div class="form-group" id="buttons" style="margin-bottom:5px; text-align:center">
            <div class="col-lg-10">
                <button onclick="SubmissionSuccessful()" type="submit" class="btn btn-primary">SUBMIT</button>
                <button type="reset" class="btn btn-primary">RESET</button>
                <a href="@Url.Action("EmployeeList","Employee", new { @class = "create" })" class="btn btn-primary">Employee List</a>
            </div>
        </div>
    </div>

}
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script>
    function SubmissionSuccessful() {
        alert("Submission Successful !");
    }
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.datepicker').datepicker(
            {
                dateFormat: 'dd-M-yy',
                changeMonth: true,
                changeYear: true
            });
    });
</script>